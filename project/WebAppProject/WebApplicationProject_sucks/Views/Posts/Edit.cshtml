@model WebApplicationProject_sucks.Models.Post

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <script src="~/PlugIn/tinymce/tinymce.min.js"></script>
    <script src="~/PlugIn/tinymce/jquery.tinymce.min.js"></script>
    <!--tinymce init-->
    <script>
        tinymce.init({
            selector: '#mytextarea',
            /* theme of the editor */


            /* width and height of the editor */
            width: "100%",
            height: 300,

            /* display statusbar*/
            statubar: true,

            /* plugin */
            plugins: [
                "advlist autolink link image lists charmap print preview hr anchor pagebreak",
                "searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking",
                "save table contextmenu directionality emoticons template paste textcolor"
            ],

            /* toolbar */
            toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview media fullpage | forecolor backcolor emoticons",

            /* style */
            style_formats: [
                {
                    title: "Headers", items: [
                        { title: "Header 1", format: "h1" },
                        { title: "Header 2", format: "h2" },
                        { title: "Header 3", format: "h3" },
                        { title: "Header 4", format: "h4" },
                        { title: "Header 5", format: "h5" },
                        { title: "Header 6", format: "h6" }
                    ]
                },
                {
                    title: "Inline", items: [
                        { title: "Bold", icon: "bold", format: "bold" },
                        { title: "Italic", icon: "italic", format: "italic" },
                        { title: "Underline", icon: "underline", format: "underline" },
                        { title: "Strikethrough", icon: "strikethrough", format: "strikethrough" },
                        { title: "Superscript", icon: "superscript", format: "superscript" },
                        { title: "Subscript", icon: "subscript", format: "subscript" },
                        { title: "Code", icon: "code", format: "code" }
                    ]
                },
                {
                    title: "Blocks", items: [
                        { title: "Paragraph", format: "p" },
                        { title: "Blockquote", format: "blockquote" },
                        { title: "Div", format: "div" },
                        { title: "Pre", format: "pre" }
                    ]
                },
                {
                    title: "Alignment", items: [
                        { title: "Left", icon: "alignleft", format: "alignleft" },
                        { title: "Center", icon: "aligncenter", format: "aligncenter" },
                        { title: "Right", icon: "alignright", format: "alignright" },
                        { title: "Justify", icon: "alignjustify", format: "alignjustify" }
                    ]
                }
            ]
        });
    </script>
    <!-- submit button func-->
    <script>
        function mySave() {
            var myContent = tinymce.get("mytextarea").getContent();
            document.getElementById("Content").value = myContent;
        }

    </script>

    <link rel="stylesheet" href="~/Content/creatPost.css?ver=<?php echo rand(111,999)?" type="text/css" />
    <link rel="stylesheet" href="~/Content/Register.css?ver=<?php echo rand(111,999)?" type="text/css" />
    <meta name="viewport" content="width=device-width" />
    <title>Question Room</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <h4>Post</h4>
        <div class="form-horizontal">



            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <!--Used to tell the edit function which room shall be edited-->
            <!--we dont need to pass the categories since its recorded in another table!-->

            @Html.HiddenFor(Model => Model.PostID)
            @Html.HiddenFor(Model => Model.ProfessionalPageID)
            <div class="form-group">
                    <label>Edit the title of this post</label><br />
                    @Html.Editor("Title", new { htmlAttributes = new { @class = "form-control", @Value = Model.Title } })

            </div>
            <div class="form-group">
                <label>Edit the description of this post</label><br />
                @Html.Editor("Description", new { htmlAttributes = new { @class = "form-control", @Value = Model.Description } })

            </div>
            <div class="form-group">
                <!--text editor , tinymce-->
                <label>Edit the Content</label>
                <textarea id="mytextarea" name="mytextarea">@Html.Raw(Model.Content)</textarea>

            </div>
                <!--question content-->
                <div class="form-group">
                    <!--the name is already set to Title-->
                    
                    @Html.HiddenFor(model => model.Content)
                </div>

                <div class="form-group">
                    <input type="submit" value="Save" onclick="mySave()" class="btn btn-default" />
                    @{ string link = "/Posts/Details/" + Session["PostID"];}
                    <a href=@link>Cancel</a>
                </div>


            </div>
            }
</body>
</html>
