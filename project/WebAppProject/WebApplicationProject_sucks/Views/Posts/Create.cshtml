@model WebApplicationProject_sucks.Models.Post

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <script src="~/PlugIn/tinymce/tinymce.min.js"></script>
    <script src="~/PlugIn/tinymce/jquery.tinymce.min.js"></script>
    <!--tinymce init-->
    <script>
        tinymce.init({
            selector: '#mytextarea',
            /* theme of the editor */


            /* width and height of the editor */
            width: "100%",
            height: 300,

            /* display statusbar*/
            statubar: true,

            /* plugin */
            plugins: [
                "advlist autolink link image lists charmap print preview hr anchor pagebreak",
                "searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking",
                "save table contextmenu directionality emoticons template paste textcolor"
            ],

            /* toolbar */
            toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview media fullpage | forecolor backcolor emoticons",

            /* style */
            style_formats: [
                {
                    title: "Headers", items: [
                        { title: "Header 1", format: "h1" },
                        { title: "Header 2", format: "h2" },
                        { title: "Header 3", format: "h3" },
                        { title: "Header 4", format: "h4" },
                        { title: "Header 5", format: "h5" },
                        { title: "Header 6", format: "h6" }
                    ]
                },
                {
                    title: "Inline", items: [
                        { title: "Bold", icon: "bold", format: "bold" },
                        { title: "Italic", icon: "italic", format: "italic" },
                        { title: "Underline", icon: "underline", format: "underline" },
                        { title: "Strikethrough", icon: "strikethrough", format: "strikethrough" },
                        { title: "Superscript", icon: "superscript", format: "superscript" },
                        { title: "Subscript", icon: "subscript", format: "subscript" },
                        { title: "Code", icon: "code", format: "code" }
                    ]
                },
                {
                    title: "Blocks", items: [
                        { title: "Paragraph", format: "p" },
                        { title: "Blockquote", format: "blockquote" },
                        { title: "Div", format: "div" },
                        { title: "Pre", format: "pre" }
                    ]
                },
                {
                    title: "Alignment", items: [
                        { title: "Left", icon: "alignleft", format: "alignleft" },
                        { title: "Center", icon: "aligncenter", format: "aligncenter" },
                        { title: "Right", icon: "alignright", format: "alignright" },
                        { title: "Justify", icon: "alignjustify", format: "alignjustify" }
                    ]
                }
            ]
        });
    </script>
    <!-- submit button func-->
    <!--question content-->
    <script>
        function mySave() {
            var myContent = tinymce.get("mytextarea").getContent();
            document.getElementById("Content").value = myContent;

        }

    </script>

    <link rel="stylesheet" href="~/Content/creatPost.css?ver=<?php echo rand(111,999)?" type="text/css" />
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>

<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <h4> New Post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "enter the post title" } })
        </div>

        <div class="form-group">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "enter a description for your post" } })
        </div>

        <div class="form-group">
            <textarea id="mytextarea" name="mytextarea">Hello, World!</textarea>
            @Html.HiddenFor(model => model.Content)
        </div>

        <label>Select all of the matching categories</label>
        <div class="form-group">

            @{
                MyDB db = new MyDB();
                List<SelectListItem> listOfCategories = new List<SelectListItem>();
                int pageid = Int32.Parse(Session["ProfessionalPageID"].ToString());
                var list = db.PageToCategories.Where(d => d.ProfessionalPageID == pageid).ToList();
                foreach (var item in list)
                {
                    listOfCategories.Add(new SelectListItem { Text = item.CategoryName, Value = item.CategoryName });
                }
            }

            @Html.ListBox("selectedOptions", listOfCategories)

        </div>

        @Html.HiddenFor(model => model.ProfessionalPageID, new { Value = pageid })

        <div class="form-group">
            <input type="submit" value="Add to my professional page" onclick="mySave()" class="btn btn-default" /><br />
            @{ string link = "/ProfessionalPages/Details/" + Session["ProfessionalPageID"];}
            <a href=@link>Cancel</a>
        </div>
    </div>
    }
</body>
</html>
