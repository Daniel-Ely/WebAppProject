@model WebApplicationProject_sucks.Models.Post

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>

    
    <meta name="viewport" content="width=device-width" />
    <link href="//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <link rel="stylesheet" href="~/Content/Comment.css?ver=<?php echo rand(111,999)?" type="text/css" />
    <link rel="stylesheet" href="~/Content/creatPost.css?ver=<?php echo rand(111,999)?" type="text/css" />
    <link rel="stylesheet" href="~/Content/Home.css?ver=<?php echo rand(111,999)?" type="text/css">

</head>
<body>
        @using (Html.BeginForm("CreateComment", "Posts"))
        {

            @Html.AntiForgeryToken()

    <div class="dl-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="titleOfPost">
            <h3> @Html.Raw(Model.Title)</h3>
            @{
                MyDB db = new MyDB();
                <h5>@db.ProfessionalPages.Where(d => d.ProfessionalPageID == Model.ProfessionalPageID).ToList().ElementAt(0).UserName</h5>
            }
            <h6>@Html.DisplayFor(model => model.Date)</h6>
            <hr />
        </div>
        
    </div>
        <div class="row">

            <div class="main">

                @Html.Raw(Model.Content)
                <br />

                @{

                <div class="rating">
                    <label>Pepole that rate this post</label>
                    @Model.NumOfRating
                </div> 

                    string userN = Session["UserName"].ToString();
                    if (db.UserToPostRatings.Where(d => d.UserName == userN && d.PostId == Model.PostID).ToList().Count==0)

                    {
                        <input type="number" placeholder="Rate this post between 1 to 10" name="Rating" id="Rating" min="1" max="10" />
                        var pathToSendRate = "/Posts/CreateRating";

                        <a href="~/Controllers/PostsController/CreateRating">Send your rate</a>
                    }

                }
                

                    <br /><br />

                    <!--Show all the comments-->
                    @foreach (var item in db.PostComments)
                    {

                        <div class="container">
                            <div class="row">
                                <div class="col-sm-10 col-sm-offset-1" id="logout">
                                    <div class="tab-content">
                                        <div class="tab-pane active" id="comments-logout">
                                            <ul class="media-list">
                                                <li class="media">
                                                    <a class="pull-left" href="#">
                                                        <img class="media-object img-circle" src="https://s3.amazonaws.com/uifaces/faces/twitter/dancounsell/128.jpg" alt="profile">
                                                    </a>
                                                    <div class="media-body">
                                                        <div class="well well-lg">
                                                            <h4 class="media-heading text-uppercase reviews"> @Html.DisplayFor(modelItem => item.UserName) </h4>
                                                            <ul class="media-date text-uppercase reviews list-inline">
                                                                <li class="dd">@Html.DisplayFor(modelItem => item.Date.Day)</li>
                                                                <li class="mm">@Html.DisplayFor(modelItem => item.Date.Month)</li>
                                                                <li class="aaaa">@Html.DisplayFor(modelItem => item.Date.Year)</li>
                                                            </ul>
                                                            <p class="media-comment">
                                                                @Html.Raw(item.Content)

                                                            </p>

                                                        </div>
                                                    </div>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    }

                    <!--commetns fo post-->
                    @Html.Hidden("PostID", Model.PostID)

                    @Html.Editor("CommentContent",new { placeholder ="Write a comment"})
                    
                    <!--creator name-->
                    <div class="form-group">
                        @Html.Hidden("CommentCreator", Session["UserName"])
                    </div>

                   
                        @{var pathToAddComment = "../Posts/CreateReating?userName=" + Session["UserName"] + "&PostID=" + Model.PostID + "&Rating=" + "rating";

                            <a href=@pathToAddComment>Send your comment</a>}
                   
                </div>
                

            <div class="side">
                @{
                    string user = Session["UserName"].ToString();
                    var isP = db.Users.Where(d => d.UserName == user).ToList().ElementAt(0).isProfessional;
                    if (isP)
                    {
                        <a href="../Edit">Edit this post </a>
                    }


                }

            </div>

        </div>
   
}

            <p>
                @Html.ActionLink("Edit", "Edit", new { id = Model.PostID }) |
                @Html.ActionLink("Back to List", "Index")
            </p>
</body>
</html>
