@model WebApplicationProject_sucks.Models.Post

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>

    <script src="~/PlugIn/tinymce/tinymce.min.js"></script>
    <script src="~/PlugIn/tinymce/jquery.tinymce.min.js"></script>
    <!--tinymce init-->
    <script>
        tinymce.init({
            selector: '#mytextarea',
            /* theme of the editor */


            /* width and height of the editor */
            width: "100%",
            height: 300,

            /* display statusbar*/
            statubar: true,

            /* plugin */
            plugins: [
                "advlist autolink link image lists charmap print preview hr anchor pagebreak",
                "searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking",
                "save table contextmenu directionality emoticons template paste textcolor"
            ],

            /* toolbar */
            toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview media fullpage | forecolor backcolor emoticons",

            /* style */
            style_formats: [
                {
                    title: "Headers", items: [
                        { title: "Header 1", format: "h1" },
                        { title: "Header 2", format: "h2" },
                        { title: "Header 3", format: "h3" },
                        { title: "Header 4", format: "h4" },
                        { title: "Header 5", format: "h5" },
                        { title: "Header 6", format: "h6" }
                    ]
                },
                {
                    title: "Inline", items: [
                        { title: "Bold", icon: "bold", format: "bold" },
                        { title: "Italic", icon: "italic", format: "italic" },
                        { title: "Underline", icon: "underline", format: "underline" },
                        { title: "Strikethrough", icon: "strikethrough", format: "strikethrough" },
                        { title: "Superscript", icon: "superscript", format: "superscript" },
                        { title: "Subscript", icon: "subscript", format: "subscript" },
                        { title: "Code", icon: "code", format: "code" }
                    ]
                },
                {
                    title: "Blocks", items: [
                        { title: "Paragraph", format: "p" },
                        { title: "Blockquote", format: "blockquote" },
                        { title: "Div", format: "div" },
                        { title: "Pre", format: "pre" }
                    ]
                },
                {
                    title: "Alignment", items: [
                        { title: "Left", icon: "alignleft", format: "alignleft" },
                        { title: "Center", icon: "aligncenter", format: "aligncenter" },
                        { title: "Right", icon: "alignright", format: "alignright" },
                        { title: "Justify", icon: "alignjustify", format: "alignjustify" }
                    ]
                }
            ]
        });
    </script>
    <!-- submit button func-->
    <!--question content-->
    <script>
        function mySave() {
            var myContent = tinymce.get("mytextarea").getContent();
            document.getElementById("CommentContent").value = myContent;
        }
       
    </script>

    <meta name="viewport" content="width=device-width" />
    <link href="//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <link rel="stylesheet" href="~/Content/Comment.css?ver=<?php echo rand(111,999)?" type="text/css" />
    <link rel="stylesheet" href="~/Content/creatPost.css?ver=<?php echo rand(111,999)?" type="text/css" />

</head>
<body>
        @using (Html.BeginForm("CreateComment", "Posts"))
        {

            @Html.AntiForgeryToken()
           
    <div class="dl-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



        <div class="CreatorName">
            <h3> @Html.Raw(Model.Title)</h3>
            <h5>@Session["UserName"]</h5>
            <h6>@Html.DisplayFor(model => model.Date)</h6>
        </div>
        <hr />

        @Html.Raw(Model.Content)

        <input type="number" value="Rate this post between 1 to 10" name="rating" min="1" max="10" />
        @Html.Hidden("Rating", "rating")

        @Model.NumOfRating
        <input type="submit" value="Send rate" onclick=@{Html.HiddenFor(Model => Model.Rating, "rating");
            Html.HiddenFor(Model=>Model.NumOfRating,Model.NumOfRating+1)} class="btn btn-default" />

        <!--commetns fo post-->
        @Html.Hidden("PostID", Model.PostID)

        <div class="form-group">
            <!--text editor , tinymce-->

            <textarea id="mytextarea" name="mytextarea">Add a comment...</textarea>
            <!--comment content-->
            <!--the name is already set to Title-->

            @Html.Hidden("CommentContent", new { @id = "CommentContent" })
        </div>

        <!--creator name-->
        <div class="form-group">
            @Html.Hidden("CommentCreator", Session["UserName"])
        </div>


        <div class="col-md-offset-2 col-md-10">

            <input type="submit" value="Send comment" onclick="mySave()" class="btn btn-default" />
        </div>

    </div>
}

            <p>
                @Html.ActionLink("Edit", "Edit", new { id = Model.PostID }) |
                @Html.ActionLink("Back to List", "Index")
            </p>
</body>
</html>
