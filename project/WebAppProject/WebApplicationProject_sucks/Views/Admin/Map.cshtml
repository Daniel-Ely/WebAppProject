
@using System.Web.Mvc.Html;
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <style>
        /* Set the size of the div element that contains the map */
        #map {
            height: 400px; /* The height is 400 pixels */
            width: 100%; /* The width is the width of the web page */
            align-content:center
        }
    </style>
</head>
<body>
    @{

        MyDB db = new MyDB();
        foreach (var pos in db.Locations)
        {
            <div name="long" value=@pos.Long></div>
            <div name="lat" value=@pos.Lat></div>
            <div name="address" value=@pos.Address></div>
        }
    }
    <h3>My Google Maps Demo</h3>
    <!--The div element for the map -->
    <div id="map"></div>
    <script>
        var longs = document.getElementsByName('long');
        var lats = document.getElementsByName('lat');
        var addresses = document.getElementsByName('address');
        // Initialize and add the map
        function initMap() {
            var bounds = new google.maps.LatLngBounds();
            // The map,
            var map = new google.maps.Map(document.getElementById('map'));

            // Display multiple markers on a map
            var infoWindow = new google.maps.InfoWindow(), marker, i;

            // Loop through our array of markers & place each one on the map
            for (var i = 0; i < longs.length; i++) {
                var long = longs.item(i).attributes.getNamedItem("value").nodeValue;
                var lat = lats.item(i).attributes.getNamedItem("value").nodeValue;
                var position = new google.maps.LatLng(long, lat);
                bounds.extend(position);
                marker = new google.maps.Marker({
                    position: position,
                    map: map,

                });
            }
            map.fitBounds(bounds);
            //
            var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function (event) {
                this.setZoom(14);
                google.maps.event.removeListener(boundsListener);
            });

        }
    </script>
    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->
    <script defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB5nv7F4qNvhiysPtgryNysdd0xUVqD5eo&callback=initMap">
    </script>

    <a href="/HomePage/Home">Back to home page</a>
</body>
</html>