@model WebApplicationProject_sucks.Models.User

@{
    Layout = null;
}


<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Register</title>
    <link rel="stylesheet" href="~/Content/Register.css?ver=<?php echo rand(111,999)?" type="text/css" />
</head>
<body>
    <h2>Register</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div class="imgcontainer">
                <img src="~/src/Owl family.png" alt="Avatar" class="avatar"><br />
            </div>
            <div class="validations">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter user name", @id = "UserNameId" } })

            </div>
            <div class="form-group">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter first name" } })

            </div>
            <div class="form-group">
                @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                    {
                    new SelectListItem { Text = "Male", Value = "Male"},
                    new SelectListItem { Text = "Female", Value = "Female"},
                    new SelectListItem { Text = "Other", Value = "Other"}
                    }, "Select your Gender")
            </div>
            <div class="form-group">
                @Html.EditorFor(model => model.BirthDay, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="form-group">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Email address" } })
            </div>
            <div class="form-group">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
            </div>


            <!-- we can change it when the send button is hit because it executes before our manipulation!-->
            @Html.TextArea("isProfessional", "0", new { style = "display: none;", @id = "isProfessional" });

            <script>
                function toggleProfessional() {
                    document.getElementById("isProfessional").value = "1";
                }
            </script>


            <script>
                /* function setUserName() {
                     //TODO: save the data to the DB before referring to another page.
                     var val = document.getElementById('UserName').value;
                     sessionStorage.setItem('UserName', val);//saves the username for session
                     window.location.replace('../ProfessionalPendings/Create');//refers to additional page
                 }*/

            </script>


            <script>
                /* $.ajax({
                     method: "POST",
                     url: "/Experiments/PersonalDetailsData",
                     data: {
                         gender: genderVal,
                         age: ageVal,
                         country: countryVal
                     },
                     success: function (dataRes) {
                         alert(dataRes);
                         window.location.replace("/Experiments/Main");
                     },
                     error: function (data) {
                         alert("error!");
                     }

                 });*/

            </script>


            <script>
                /*   $("#foo").submit(function (event) {

                       // Prevent default posting of form - put here to work in case of errors
                       event.preventDefault();

                       // Abort any pending request
                       if (request) {
                           request.abort();
                       }
                       // setup some local variables
                       var $form = $(this);

                       // Let's select and cache all the fields
                       var $inputs = $form.find("input, select, button, textarea");

                       // Serialize the data in the form
                       var serializedData = $form.serialize();

                       // Let's disable the inputs for the duration of the Ajax request.
                       // Note: we disable elements AFTER the form data has been serialized.
                       // Disabled form elements will not be serialized.
                       $inputs.prop("disabled", true);

                       // Fire off the request to /form.php
                       request = $.ajax({
                           url: "/form.php",
                           type: "post",
                           data: serializedData
                       });


                       // Callback handler that will be called on success
                       request.done(function (response, textStatus, jqXHR) {
                           var val = document.getElementById('UserName').value;
                           sessionStorage.setItem('UserName', val);//saves the username for session
                           window.location.replace('../ProfessionalPendings/Create');//refers to additional page
                       });

                       // Callback handler that will be called on failure
                       request.fail(function (jqXHR, textStatus, errorThrown) {
                           // Log the error to the console
                           console.error(
                               "The following error occurred: " +
                               textStatus, errorThrown
                           );
                       });

                       // Callback handler that will be called regardless
                       // if the request failed or succeeded
                       /*   request.always(function () {
                              // Reenable the inputs
                              $inputs.prop("disabled", false);
                          });

                   });*/

            </script>



            <div class="form-group">
                <input type="submit" value="Register" class="btn btn-default" />

                <input type="submit" value="Register as a professional creator" onclick="toggleProfessional()" />
            </div>


        </div>


    }



</body>
</html >
